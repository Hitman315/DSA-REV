class Solution {
public:
	int isNegativeWeightCycle(int n, vector<vector<int>>edges){
	    // Code here
	    int inf=10000000;
	    vector<int>dis(n,inf);
	    //First of all rest all the edges for n-1 times 
	    for(int i=0;i<n-1;i++){
	        //Visit the edges and find the u,v and w
	        for(auto it:edges){
	        int u=it[0];
	        int v=it[1];
	        int w=it[2];
	        
	        //if sum of distance of u and weight is less than distance of v then update the distance of v
	        if(dis[u]+w<dis[v]){
	            dis[v]=dis[u]+w;
	        }
	        }
	    }
	    
	    //Again rest the edge for one more time if the sum of distance of u and weight is still
	    //less then it contains negative cycle. If not it does not contains negative cycle
	    for(int i=0;i<edges.size();i++){
	        int u=edges[i][0];
	        int v=edges[i][1];
	        int w=edges[i][2];
	        
	        if(dis[u]+w<dis[v])
	        return 1;
	    }
	    return 0;
	}
};